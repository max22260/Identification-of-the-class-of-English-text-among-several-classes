print(ex_pred[i])
print("----------------------------------------------------------------------------------------------")
}
#========================================================================================================
View(external_data)
--------------------------------------------------------------------------------------------------
external_data <- read.dir("../data/external_data/",".TXT")
external_corpus <- Corpus(VectorSource(as.matrix(external_data$content)))
ex_dtm <-preProcess_TFIDF(row.data = external_data$content ,stopword.dir = "../data/stopword.txt",
BagOfWord = BagOW , TRUE )
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(external_corpus) ){
print( external_corpus[[i]][["content"]] )
print(": ")
print(ex_pred[i])
print("----------------------------------------------------------------------------------------------")
}
#========================================================================================================
View(external_data)
--------------------------------------------------------------------------------------------------
external_data <- read.dir("../data/external_data/",".TXT")
external_corpus <- Corpus(VectorSource(as.matrix(external_data$content)))
ex_dtm <-preProcess_TFIDF(row.data = external_data$content ,stopword.dir = "../data/stopword.txt",
BagOfWord = BagOW , TRUE )
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(external_corpus) ){
print( external_corpus[[i]][["content"]] )
print(": ")
print(ex_pred[i])
print("----------------------------------------------------------------------------------------------")
}
#========================================================================================================
View(external_data)
--------------------------------------------------------------------------------------------------
external_data <- read.dir("../data/external_data/",".TXT")
external_corpus <- Corpus(VectorSource(as.matrix(external_data$content)))
ex_dtm <-preProcess_TFIDF(row.data = external_data$content ,stopword.dir = "../data/stopword.txt",
BagOfWord = BagOW , TRUE )
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(external_corpus) ){
print( external_corpus[[i]][["content"]] )
print(": ")
print(ex_pred[i])
print("----------------------------------------------------------------------------------------------")
}
#========================================================================================================
--------------------------------------------------------------------------------------------------
external_data <- read.dir("../data/external_data/",".TXT")
external_corpus <- Corpus(VectorSource(as.matrix(external_data$content)))
ex_dtm <-preProcess_TFIDF(row.data = external_data$content ,stopword.dir = "../data/stopword.txt",
BagOfWord = BagOW , TRUE )
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(external_corpus) ){
print( external_corpus[[i]][["content"]] )
print(": ")
print(ex_pred[i])
print("----------------------------------------------------------------------------------------------")
}
#========================================================================================================
View(external_data)
external_data <- read.dir("../data/external_data/",".TXT")
#------------------------------------------------------------------------------------------------------
external_data <- read.dir("../data/external_data/",".TXT")
external_corpus <- Corpus(VectorSource(as.matrix(external_data$content)))
ex_dtm <-preProcess_TFIDF(row.data = external_data$content ,stopword.dir = "../data/stopword.txt",
BagOfWord = BagOW , TRUE )
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(external_corpus) ){
print( external_corpus[[i]][["content"]] )
print(": ")
print(ex_pred[i])
print("----------------------------------------------------------------------------------------------")
}
#========================================================================================================
#------------------------------------------------------------------------------------------------------
external_data <- read.dir("../data/external_data/",".TXT")
external_corpus <- Corpus(VectorSource(as.matrix(external_data$content)))
ex_dtm <-preProcess_TFIDF(row.data = external_data$content ,stopword.dir = "../data/stopword.txt",
BagOfWord = BagOW , TRUE )
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(external_corpus) ){
print( external_corpus[[i]][["content"]] )
print(": ")
print(ex_pred[i])
print("----------------------------------------------------------------------------------------------")
}
#========================================================================================================
#------------------------------------------------------------------------------------------------------
external_data <- read.dir("../data/external_data/",".TXT")
external_corpus <- Corpus(VectorSource(as.matrix(external_data$content)))
ex_dtm <-preProcess_TFIDF(row.data = external_data$content ,stopword.dir = "../data/stopword.txt",
BagOfWord = BagOW , TRUE )
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(external_corpus) ){
print( external_corpus[[i]][["content"]] )
print(": ")
print(ex_pred[i])
print("----------------------------------------------------------------------------------------------")
}
#========================================================================================================
#------------------------------------------------------------------------------------------------------
external_data <- read.dir("../data/external_data/",".TXT")
external_corpus <- Corpus(VectorSource(as.matrix(external_data$content)))
ex_dtm <-preProcess_TFIDF(row.data = external_data$content ,stopword.dir = "../data/stopword.txt",
BagOfWord = BagOW , TRUE )
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(external_corpus) ){
print( external_corpus[[i]][["content"]] )
print(": ")
print(ex_pred[i])
print("----------------------------------------------------------------------------------------------")
}
#========================================================================================================
saveRDS(svm,file = "../data/best-model.rda")
save(train_data_model,BagOW,file = "../data/best-model_DataMatrix")
saveRDS(svm ,file = "../data/best-model.rda")
load(file = "../data/best-model.rda")
loadmodel(file = "../data/best-model.rda")
loadmodel(file = "../data/best-model.rda")
loadmodel(file = "../data/BestModel_data_matrix.RData")
load(file = "../data/BestModel_data_matrix.RData")
load(file = "../data/best-model.rda")
load("/home/max/Desktop/Identification of the class of English text among several classes/data/best-model.rda")
load("/home/max/Desktop/Identification of the class of English text among several classes/data/best-model.rda")
load(file = "/home/max/Desktop/model.rda")
load(file = "/home/max/Desktop/model.rda")
loadmodel(file = "/home/max/Desktop/model.rda",)
loadmodel(file =  "/home/max/Desktop/model.rda",)
loadmodel(file =  "/home/max/Desktop/model.rda")
readRDS(file =  "/home/max/Desktop/model.rda")
readRDS(file =  "/home/max/Desktop/model.rda")
svm<-readRDS(file =  "/home/max/Desktop/model.rda")
svm<-readRDS(file =  "../data/best-model.rda")
test<- readline(prompt = "../data/external_data/6.TXT")
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
test <- as.data.frame(test)
View(test)
test<- readline(prompt = "../data/external_data/6.TXT")
test<- readline(prompt = "../data/external_data/6.TXT")
test<- readLines(prompt = "../data/external_data/6.TXT")
test<- readLines(prompt = "../data/external_data/6.TXT")
test<- readLines(prompt = "../data/external_data/6.TXT")
test<- readLines(prompt = "../data/external_data/6.TXT")
test<- readLines(prompt = "../data/external_data/6.TXT")
test<- readLines(prompt = "../data/external_data/6.TXT")
test<- readLines(prompt = "../data/external_data/6.TXT")
test<- readLines(prompt = "../data/external_data/6.TXT")
remove(test)
test <-(prompt = "../data/external_data/6.TXT")
test <-readline(prompt = "../data/external_data/6.TXT")
test <-readline(prompt = "../data/external_data/6.TXT")
test <-read.csv(prompt = "../data/external_data/6.TXT")
test <-read_document(prompt = "../data/external_data/6.TXT")
test <-readLines(prompt = "../data/external_data/6.TXT")
test <-readLines("../data/external_data/6.TXT")
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
test <- as.data.frame(test)
View(test)
test <-readLine("../data/external_data/6.TXT")
test <-readLine("../data/external_data/6.TXT")
test <-readline("../data/external_data/6.TXT")
test <-readLines("../data/external_data/6.TXT")
test <- as.data.frame(x = test)
View(test)
ex_dtm<-preProcess(row.data = test ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
ex_dtm<-preProcess(row.data = test$test ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
test <- as.data.frame(x = test)
ex_dtm<-preProcess(row.data = test$test ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
matre <- matrix(nrow = 1,ncol = 1)
test <-readLines("../data/external_data/6.TXT")
matre<-paste(test, sep = "", collapse = "")
matre <- matrix(nrow = 1,ncol = 1)
matre <- matrix(nrow = 1,ncol = 1)
matre<-paste(test, sep = "", collapse = "")
matre <- matrix(nrow = 1,ncol = 1)
matre$<-paste(test, sep = "", collapse = "")
matre[1]<-paste(test, sep = "", collapse = "")
View(matre)
ex_dtm<-preProcess(row.data = matre ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
ex_dtm<-preProcess(row.data = matre[1] ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
ex_dtm<-preProcess(row.data = matre ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
matre <- as.data.frame(matre)
ex_dtm<-preProcess(row.data = matre ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
preProcess <- function(row.data, stopword.dir, BagOfWord , boolstemm){
packages <- c('tm')
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
library(tm)
row.data<-iconv(row.data,"WINDOWS-1252","UTF-8")
stopwordlist<- readLines(stopword.dir)
train_corpus<- Corpus(VectorSource(row.data))
train_corpus <-tm_map(train_corpus,tolower)
train_corpus<-tm_map(train_corpus,removeNumbers)
train_corpus<-tm_map(train_corpus,removeWords,stopwords("english"))
train_corpus<-tm_map(train_corpus,removeWords,stopwordlist)
train_corpus<- tm_map(train_corpus,removePunctuation)
train_corpus<-tm_map(train_corpus,stripWhitespace)
if(boolstemm){
train_corpus<-tm_map(train_corpus,stemDocument,language = "english")
}
DTM <-DocumentTermMatrix(train_corpus,
control = list(tolower = T ,
removeNumbers =T ,
removePunctuation = T ,
stopwords = T
, stripWhitespace = T ,dictionary = BagOfWord  ))
print("DTM DONE !!")
print(DTM)
return(DTM)
}
ex_dtm<-preProcess(row.data = matre ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
test <-readLines("../data/external_data/6.TXT")
ex_dtm<-preProcess(row.data = test ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
ex_pred
View(ex_data_model)
matre <- matrix(nrow = 1,ncol = 1)
matre[1]<-paste(test, sep = "", collapse = "")
matre <- as.data.frame(matre)
ex_dtm<-preProcess(row.data = matre[1] ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
ex_matrix
ex_pred
View(matre)
ex_pred = predict(svm,newdata = ex_data_model  )
ex_pred
read.dir <-function(dir , pattern){
file.names <- dir(dir, pattern = pattern)
file.names = as.data.frame(file.names)
file.names$content = NA
colnames(file.names) = c("filename", "content" )
for(i in 1:length(file.names[,1])){
path <- paste0(dir,'/',file.names[i,1])
line <-  readLines(path)
# print(file.names[i,1])
file.names[i,2] <-paste(line, sep = "", collapse = "")
}
return(file.names)
}
exdata <- read.dir("/home/max/Desktop/ex/",".TXT")
exdata$content <- iconv(exdata$content,"WINDOWS-1252","UTF-8")
ex_dtm<-preProcess(row.data = exdata$content ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(ex_corpus) ){
print( ex_corpus[[i]][["content"]] )
print(": ")
print( ex_pred[i])
}
ex_corpus <- Corpus(VectorSource(as.matrix(exdata$content)))
str(ex_dtm)
dim(ex_dtm)
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(ex_corpus) ){
print( ex_corpus[[i]][["content"]] )
print(": ")
print( ex_pred[i])
}
exdata <- read.dir("/home/max/Desktop/ex/",".TXT")
exdata <- read.dir("/home/max/Desktop/test1/",".TXT")
exdata$content <- iconv(exdata$content,"WINDOWS-1252","UTF-8")
ex_corpus <- Corpus(VectorSource(as.matrix(exdata$content)))
ex_dtm<-preProcess(row.data = exdata$content ,stopword.dir = "../data/stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model  )
for(i in 1:length(ex_corpus) ){
print( ex_corpus[[i]][["content"]] )
print(": ")
print( ex_pred[i])
}
s1 <- load("../data/approaches_data/first_approach/accuracy.RData")
View(accuracy)
s1 = load("../data/approaches_data/first_approach/accuracy.RData")
View(accuracy)
s1 <- accuracy
load("../data/approaches_data/second-approach/accuracy.RData")
s2 <- accuracy
load("../data/approaches_data/third-approach//accuracy.RData")
s3 <- accuracy
load("../data/approaches_data/fourth approach//accuracy.RData")
s4 <- accuracy
load("../data/approaches_data/fifth approach//accuracy.RData")
s5 <- accuracy
load("../data/approaches_data/sixth-approach/accuracy.RData")
s6 <- accuracy
load("../data/approaches_data/seventh-approach/accuracy.RData")
s7 <- accuracy
all_accuracy <- rbind(s1,s2,s3,s4,s5,s6,s7)
View(all_accuracy)
save(all_accuracy ,file = "../data/approaches_data/all_accuracy.RData")
require(reshape2)
ggplot(melt(all_accuracy), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("10 fold cross validation") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
library(ggplot2)
require(reshape2)
ggplot(melt(all_accuracy), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("10 fold cross validation") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
require(reshape2)
ggplot(melt(all_accuracy), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("10 fold cross validation") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
require(reshape2)
ggplot(melt(all_accuracy), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("10 fold cross validation") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
require(reshape2)
ggplot(melt(all_accuracy), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("10 fold cross validation") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
acc_plot <- as.data.frame(acc_matrix[,1:4])
ggplot(data = melt(all_accuracy), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
ggplot(data = melt(all_accuracy), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
all_accuracy <- as.data.frame(all_accuracy)
save(all_accuracy ,file = "../data/approaches_data/all_accuracy.RData")
require(reshape2)
ggplot(melt(all_accuracy), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("10 fold cross validation") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
require(reshape2)
ggplot(melt(all_accuracy), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("7 approaches accuracy") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
barplot(all_accuracy, main = "BBC DataSet"  , xlab = "class" , ylim = c(0,800) , col = "lightblue")
barplot(all_accuracy$`naive bayes`, main = "BBC DataSet"  , xlab = "class" , ylim = c(0,800) , col = "lightblue")
barplot(all_accuracy[1,], main = "BBC DataSet"  , xlab = "class" , ylim = c(0,800) , col = "lightblue")
barplot(all_accuracy[1,], main = "BBC DataSet"  , xlab = "class" , ylim = c(0,800) , col = "lightblue")
barplot(s1, main = "BBC DataSet"  , xlab = "class" , ylim = c(0,800) , col = "lightblue")
ggplot(data = melt(all_accuracy), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
barplot(plot, s1 = "BBC DataSet"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
s1 <as.vector(s1)
View(s1)
s1 <- as.vector(s1)
barplot(plot, s1 = "BBC DataSet"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
s1 <- as.matrix(s1)
View(s1)
barplot(plot, s1 = "BBC DataSet"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
load("../data/approaches_data/first_approach//accuracy.RData")
s1 <- accuracy
barplot(plot, s1[1,] = "BBC DataSet"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(plot, s1[1,] = "BBC DataSet"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(plot, s1[] = "BBC DataSet"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(s1, main = "BBC DataSet"  , xlab = "class" , ylim = c(0,800) , col = "lightblue")
barplot(s1, main = "BBC DataSet"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(s1, main = "BBC DataSet"  , xlab = "class" , ylim = c(0,1.5) , col = "lightblue")
barplot(s1, main = "BBC DataSet"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(s1, main = "first approach accuracy"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(s2, main = "second approach accuracy"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(s1, main = "first approach accuracy"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(s3, main = "third approach accuracy"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(s4, main = "fourth approach accuracy"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(s5, main = "fifth approach accuracy"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(s6, main = "sixth approach accuracy"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
barplot(s7, main = "seventh approach accuracy"  , xlab = "class" , ylim = c(0,1) , col = "lightblue")
colnames(all_accuracy)
require(reshape2)
ggplot(melt(all_accuracy$`naive bayes`), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("naive bayes accuracy for all seven approaches") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
ggplot(melt(all_accuracy$naive bayes), aes(x = variable, y = value, fill = variable)) +
naive.bayes <- all_accuracy$`naive bayes`
require(reshape2)
ggplot(melt(naive.bayes), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("naive bayes accuracy for all seven approaches") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
require(reshape2)
ggplot(melt(naive.bayes), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("naive bayes accuracy for all seven approaches") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
require(reshape2)
ggplot(melt(naive.bayes), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("naive bayes accuracy for all seven approaches") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
require(reshape2)
ggplot(melt(all_accuracy), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("naive bayes accuracy for all seven approaches") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
View(s1)
naive.bayes <- rbind(s1[,1],s2[1,],s3[,1],s4[,1],s5[,1],s6[,1],s7[,1])
View(naive.bayes)
naive.bayes <- all_accuracy
View(naive.bayes)
naive.bayes <- naive.bayes$`naive bayes`
naive.bayes <- all_accuracy
naive.bayes <- as.data.frame( naive.bayes$`naive bayes`)
View(naive.bayes)
colnames(naive.bayes) <- "naive bayes"
require(reshape2)
ggplot(melt(naive.bayes), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("naive bayes accuracy for all seven approaches") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
decision.tree <- all_accuracy$`decision tree`
decision.tree <- as.data.frame( all_accuracy$`decision tree`)
View(decision.tree)
colnames(decision.tree) <- "decision tree"
require(reshape2)
ggplot(melt(decision.tree), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("decision tree accuracy for all seven approaches") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
random.forest <- as.data.frame(all_accuracy$`random forest`)
colnames(random.forest) <- "random forest"
require(reshape2)
ggplot(melt(random.forest), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("random forest accuracy for all seven approaches") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
support.vector.machine <- as.data.frame(all_accuracy$`support vector machine`)
support.vector.machine <- as.data.frame(all_accuracy$`support vector machine`)
colnames(support.vector.machine) <- "support vector machine "
require(reshape2)
ggplot(melt(support.vector.machine), aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
ggtitle("support vector machine accuracy for all seven approaches") +
theme(axis.text.x = element_text(angle=0, face="bold", colour="black"))
