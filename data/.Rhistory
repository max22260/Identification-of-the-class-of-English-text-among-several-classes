shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
test <- "ahmed nagy radwan data analyist work in google"
ex_corpus <- Corpus(VectorSource(as.matrix(test)))
preProcess_TFIDF <- function(row.data, stopword.dir, BagOfWord , boolstemm ){
packages <- c('tm')
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
library(tm)
row.data<-iconv(row.data,"WINDOWS-1252","UTF-8")
stopwordlist<- readLines(stopword.dir)
train_corpus<- Corpus(VectorSource(row.data))
train_corpus <-tm_map(train_corpus,content_transformer(tolower))
train_corpus<-tm_map(train_corpus,removeNumbers)
train_corpus<-tm_map(train_corpus,removeWords,stopwords("english"))
train_corpus<-tm_map(train_corpus,removeWords,stopwordlist)
train_corpus<- tm_map(train_corpus,removePunctuation)
train_corpus<-tm_map(train_corpus,stripWhitespace)
if(boolstemm){
train_corpus<-tm_map(train_corpus,stemDocument,language = "english")
}
DTM <-DocumentTermMatrix(train_corpus,
control = list(tolower = T ,
removeNumbers =T ,
removePunctuation = T ,
stopwords = T
, stripWhitespace = T ,
dictionary = BagOfWord,
weighting = weightTfIdf))
print("DTM DONE !!")
print(DTM)
return(DTM)
}
binary.weight <-function(x)
{
x <- (x > 0)+0
}
ex_dtm <-preProcess_TFIDF(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
setwd(dir = "/home/max/Desktop/Identification of the class of English text among several classes/data/")
ex_dtm <-preProcess_TFIDF(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
load("/home/max/Desktop/best_sample.RData")
ex_dtm <-preProcess_TFIDF(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
dim(ex_dtm)
cl <- makePSOCKcluster(5)
registerDoParallel(cl)
timr <- Sys.time()
svm <- train(y~.,data = trainData,method = 'svmLinear3')
library(caret)
library(doParallel)
cl <- makePSOCKcluster(5)
registerDoParallel(cl)
timr <- Sys.time()
svm <- train(y~.,data = trainData,method = 'svmLinear3')
## When you are done:
stopCluster(cl)
total_runtime <- difftime(Sys.time(), timr)
print(total_runtime)
pre <- predict(svm,testData[,-1])
t <- table(pre,testData$y)
acc = sum(diag(t))/sum(t)
print(acc)
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
View(ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
for(i in 1:length(ex_corpus) ){
print( ex_corpus[[i]][["content"]] )
print(": ")
print( ex_pred[i])
}
ex_pred
View(ex_data_model)
test <- "ahmed nagy radwan data analyist work in google profissor of machine learning "
ex_dtm <-preProcess_TFIDF(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
dim(ex_dtm)
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
test <- "Hooli stock price soared after a dip in PiedPiper revenue growth."
ex_dtm <-DocumentTermMatrix(ex_corpus, control = list(tolower = T , removeNumbers =T ,removePunctuation = T , stopwords = T
, stripWhitespace = T  ,dictionary = train_bag_of_word))
ex_dtm <-preProcess_TFIDF(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
dim(ex_dtm)
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
preProcess <- function(row.data, stopword.dir, BagOfWord , boolstemm){
packages <- c('tm')
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
library(tm)
row.data<-iconv(row.data,"WINDOWS-1252","UTF-8")
stopwordlist<- readLines(stopword.dir)
train_corpus<- Corpus(VectorSource(row.data))
train_corpus <-tm_map(train_corpus,tolower)
train_corpus<-tm_map(train_corpus,removeNumbers)
train_corpus<-tm_map(train_corpus,removeWords,stopwords("english"))
train_corpus<-tm_map(train_corpus,removeWords,stopwordlist)
train_corpus<- tm_map(train_corpus,removePunctuation)
train_corpus<-tm_map(train_corpus,stripWhitespace)
if(boolstemm){
train_corpus<-tm_map(train_corpus,stemDocument,language = "english")
}
DTM <-DocumentTermMatrix(train_corpus,
control = list(tolower = T ,
removeNumbers =T ,
removePunctuation = T ,
stopwords = T
, stripWhitespace = T ,dictionary = BagOfWord  ))
print("DTM DONE !!")
print(DTM)
return(DTM)
}
ex_dtm<-preProcess(row.data = test ,stopword.dir = "test.txt",BagOfWord = BagOW , TRUE )
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
ex_dtm <-preProcess_TFIDF(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
test <- "ahmed nagi is a data analyist on google"
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
test <- "dr shrief kholef is best doctor in information system department "
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
test <- "Three political groups backed by the brothers say they will use advertising, lobbying and grassroots campaigns to push the benefits of free trade.
The duo run Koch Industries, one of the world's largest privately owned firms.
The move comes just days after Mr Trump imposed tariffs on steel and aluminium imports from the EU, Canada and Mexico.
On Tuesday, the company was told that David Koch, 78, was stepping down because of his deteriorating health."
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
test <- "A firm that manages millions of job applications around the world suspects it has suffered a data breach.
PageUp's software is used for recruitment, but also salary information, bank details, tax numbers and other sensitive personal data.
Its clients include supermarket Aldi, Clydesdale Bank and chocolate-maker Lindt.
The firm has notified data regulators, including the UK's Information Commissioner's Office."
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
-----------------------------------------------------------------------------
load(file = "/home/max/Desktop/test/bbc_DataMatrix.RData")
bbc.data.matrix$content <-iconv(bbc.data.matrix$content,"WINDOWS-1252","UTF-8")
train_dtm <-preProcess_TFIDF(row.data = bbc.data.matrix$content ,stopword.dir = "stopword.txt",BagOfWord = NULL , TRUE)
train_dtm <- removeSparseTerms(train_dtm,0.993)
BagOW <- findFreqTerms(train_dtm)
train_matrix <- as.matrix(train_dtm)
#train_matrix <- binary.weight(train_matrix)
train_data_model <- as.data.frame(train_matrix)
train_data_model <- data.frame(y=bbc.data.matrix$class , x = train_data_model)
load(file = "/home/max/Desktop/test/bbc_DataMatrix.RData")
bbc.data.matrix$content <-iconv(bbc.data.matrix$content,"WINDOWS-1252","UTF-8")
train_dtm <-preProcess_TFIDF(row.data = bbc.data.matrix$content ,stopword.dir = "stopword.txt",BagOfWord = NULL , TRUE)
train_dtm <- removeSparseTerms(train_dtm,0.993)
BagOW <- findFreqTerms(train_dtm)
dim(train_dtm)
train_matrix <- as.matrix(train_dtm)
#train_matrix <- binary.weight(train_matrix)
train_data_model <- as.data.frame(train_matrix)
train_data_model <- data.frame(y=bbc.data.matrix$class , x = train_data_model)
library(caret)
library(doParallel)
cl <- makePSOCKcluster(5)
registerDoParallel(cl)
timr <- Sys.time()
svm <- train(y~.,data = train_data_model,method = 'svmLinear3')
## When you are done:
stopCluster(cl)
total_runtime <- difftime(Sys.time(), timr)
print(total_runtime)
test <- "A firm that manages millions of job applications around the world suspects it has suffered a data breach.
PageUp's software is used for recruitment, but also salary information, bank details, tax numbers and other sensitive personal data.
Its clients include supermarket Aldi, Clydesdale Bank and chocolate-maker Lindt.
The firm has notified data regulators, including the UK's Information Commissioner's Office."
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
test <- "You won't guess what the latest trend in data analysis is!"
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
test <- "Captain Tsubasa scores a magnificent goal for the Japanese team."
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
test <- "Eleanor Tomlinson who portrays Demelza Poldark said she felt very humbled by the success of the programme.
She said she does not engage in any hype on social media" because "haters just make you feel bad and she wants to be known for my acting not my personal life.
When asked during a question and answer session what her all time favourite scene was to date she said: It's a scene I'm not in and hasn't been on yet... Luke (Norris, Dwight Enys) getting out of the sea."
exdata <- read.dir("/home/max/Desktop/ex/",".TXT")
read.dir <-function(dir , pattern){
file.names <- dir(dir, pattern = pattern)
file.names = as.data.frame(file.names)
file.names$content = NA
colnames(file.names) = c("filename", "content" )
for(i in 1:length(file.names[,1])){
path <- paste0(dir,'/',file.names[i,1])
line <-  readLines(path)
# print(file.names[i,1])
file.names[i,2] <-paste(line, sep = "", collapse = "")
}
return(file.names)
}
exdata <- read.dir("/home/max/Desktop/ex/",".TXT")
exdata$content <- iconv(exdata$content,"WINDOWS-1252","UTF-8")
ex_corpus <- Corpus(VectorSource(as.matrix(test)))
ex_dtm<-preProcess(row.data = exdata$content ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
for(i in 1:length(ex_corpus) ){
print( ex_corpus[[i]][["content"]] )
print(": ")
print( ex_pred[i])
}
for(i in 1:length(ex_corpus) ){
print( ex_corpus[[i]][["content"]] )
print(": ")
print( ex_pred[i])
}
ex_corpus <- Corpus(VectorSource(as.matrix(test)))
ex
ex_pred
for(i in 1:length(ex_corpus) ){
print( ex_corpus[[i]][["content"]] )
print(": ")
print( ex_pred[i])
}
ex_corpus
ex_corpus
ex_corpus
ex_corpus[]
ex_corpus <- Corpus(VectorSource(as.matrix(exdata$content)))
for(i in 1:length(ex_corpus) ){
print( ex_corpus[[i]][["content"]] )
print(": ")
print( ex_pred[i])
}
test<- " ahmed nagy work in nub bank and he die in room of stock market"
ex_dtm<-preProcess(row.data = test ,stopword.dir = "stopword.txt",BagOfWord = BagOW , TRUE )
str(ex_dtm)
dim(ex_dtm)
### test1 matrix form
ex_matrix <- as.matrix(ex_dtm)
ex_data_model <- as.data.frame(ex_matrix)
##test1_data_model
dim(ex_data_model)
ex_data_model <- data.frame(x=ex_data_model)
ex_pred = predict(svm,newdata = ex_data_model )
ex_pred
